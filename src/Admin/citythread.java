/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * city.java
 *
 * Created on Jan 3, 2013, 9:42:55 PM
 */

package Admin;

/**
 *
 * @author BEDI
 */
import java.awt.Color;
import java.sql.*;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;
import java.io.File;

public  class citythread extends javax.swing.JFrame implements Runnable {
JLabel checkpoint=new JLabel();
        int counter=0;
        int initx=0;
        int inity=0;
        int endx=0;
        int endy=0;
        File input;
        File input1;
        BufferedImage image;
        BufferedImage image1;
        Thread t;
    /** Creates new form city */
    public  citythread() {
        initComponents();
        setcheckpoint();
        t=new Thread(this,"City");
        t.start();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        map = new javax.swing.JPanel();
        clear = new javax.swing.JButton();
        rcab = new javax.swing.JRadioButton();
        rcheckpoint = new javax.swing.JRadioButton();
        rroad = new javax.swing.JRadioButton();
        checkname = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("City Map");

        map.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        map.setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));
        map.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mapMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mapMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mapMousePressed(evt);
            }
        });
        map.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                mapMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout mapLayout = new javax.swing.GroupLayout(map);
        map.setLayout(mapLayout);
        mapLayout.setHorizontalGroup(
            mapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 457, Short.MAX_VALUE)
        );
        mapLayout.setVerticalGroup(
            mapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 343, Short.MAX_VALUE)
        );

        clear.setText("Clear All");
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMouseClicked(evt);
            }
        });

        buttonGroup1.add(rcab);
        rcab.setText("Cabs");

        buttonGroup1.add(rcheckpoint);
        rcheckpoint.setSelected(true);
        rcheckpoint.setText("Checkpoint");

        buttonGroup1.add(rroad);
        rroad.setText("Road");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rcab)
                    .addComponent(rcheckpoint)
                    .addComponent(clear)
                    .addComponent(rroad)
                    .addComponent(checkname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(map, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clear)
                .addGap(18, 18, 18)
                .addComponent(rcheckpoint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rroad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rcab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(checkname)
                .addGap(37, 37, 37))
            .addComponent(map, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void mapMouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
}

    private void mapMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int x=evt.getX();
        int y=evt.getY();
        boolean check;
        if(rcheckpoint.isSelected()) {
            String name=JOptionPane.showInputDialog(null, "Enter Landmark ",
"Checkpoint", 1);
            if(name!=null)
            {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/cabservice", "root", "");
                Statement stat=con.createStatement();
                ResultSet r=stat.executeQuery("SELECT * FROM location WHERE name='"+name+"'");
                if(r.next())
                {
                    JOptionPane.showMessageDialog(null, "Landmark Already Marked");
                }
                else
                {
                   stat.executeUpdate("INSERT INTO location (x,y,name) VALUES('"+x+"','"+y+"','"+name+"')");
                }
                setcheckpoint();
            }catch(Exception e) {
                System.out.println(e);
            }
            }
        }
        else if(rroad.isSelected())
        {
            int tempx=0;
            int tempy=0;
            if(counter==0)
            {
                try
                {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/cabservice", "root", "");
                Statement stat=con.createStatement();
                    tempx=x;
                    tempy=y;
                    Statement stat1=con.createStatement();
                    ResultSet r1=stat1.executeQuery("SELECT * FROM location");
                    while(r1.next())
                    {
                        if(tempx>=(Integer.parseInt(r1.getString("x"))-100)&&tempx<=(Integer.parseInt(r1.getString("x"))+100))
                        {
                            if(tempy>=(Integer.parseInt(r1.getString("y"))-100)&&tempy<=(Integer.parseInt(r1.getString("y"))+100))
                            {
                                tempx=Integer.parseInt(r1.getString("x"))+12;
                                tempy=Integer.parseInt(r1.getString("y"))+20;
                                JOptionPane.showMessageDialog(null, "Select another Checkpoint");
                                initx=tempx;
                                inity=tempy;
                                counter=1;
                                break;
                            }
                        }
                    }
                }catch(Exception e)
                {
                    System.out.println(e);
                }
            }

            else
            {
                try
                {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/cabservice", "root", "");
                Statement stat=con.createStatement();
                    String init;
                    String end;
                    tempx=evt.getX();
                    tempy=evt.getY();
                    Statement stat1=con.createStatement();
                    ResultSet r1=stat1.executeQuery("SELECT * FROM location");
                    while(r1.next())
                    {
                        if(tempx>=Integer.parseInt(r1.getString("x"))-100&&tempx<=Integer.parseInt(r1.getString("x"))+100)
                        {
                            if(tempy>=Integer.parseInt(r1.getString("y"))-100&&tempy<=Integer.parseInt(r1.getString("y"))+100)
                            {
                                tempx=Integer.parseInt(r1.getString("x"))+12;
                                tempy=Integer.parseInt(r1.getString("y"))+20;
                                JOptionPane.showMessageDialog(null, "Location Added");
                                init=initx+","+inity;
                                end=tempx+","+tempy;
                                stat.executeUpdate("INSERT INTO road (source,destination) VALUES('"+init+"','"+end+"')");
                                counter=0;
                                break;
                            }
                        }
                    }
                }catch(Exception e)
                {
                    System.out.println(e);
                }
                this.paint(this.getGraphics());
            }
        }
        else if(rcab.isSelected()) {
            String cabpos=JOptionPane.showInputDialog(null,"Enter Cab ID: ",
"Cab", 1);
                try
                {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/cabservice", "root", "");
                Statement stat=con.createStatement();
                    Statement stat1=con.createStatement();
                    ResultSet r1=stat1.executeQuery("SELECT * FROM location");
                    while(r1.next())
                    {
                        if(x>=(Integer.parseInt(r1.getString("x"))-100)&&x<=(Integer.parseInt(r1.getString("x"))+100))
                        {
                            if(y>=(Integer.parseInt(r1.getString("y"))-100)&&y<=(Integer.parseInt(r1.getString("y"))+100))
                            {
                                x=Integer.parseInt(r1.getString("x"))+12;
                                y=Integer.parseInt(r1.getString("y"))+20;
                                String location=x+","+y;
                                JOptionPane.showMessageDialog(null, "Cab Placed");
                                stat.executeUpdate("UPDATE cab_details SET current='"+location+"' WHERE id='"+cabpos+"'");
                                break;
                            }
                        }
                    }
                }catch(Exception e)
                {
                    System.out.println(e);
                }
                this.paint(this.getGraphics());
        }
}

    private void mapMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
}

    private void clearMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        try
            {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/cabservice", "root", "");
                Statement stat=con.createStatement();
                stat.executeUpdate("DELETE FROM location");
                stat.executeUpdate("DELETE FROM road");
                stat.executeUpdate("UPDATE cab_details SET current='0,0'");
                this.paint(this.getGraphics());
            }catch(Exception e)
            {
                System.out.println(e);
            }
    }

    private void mapMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void mapMouseMoved(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int x=evt.getX();
        int y=evt.getY();
        int counter=0;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/cabservice", "root", "");
            Statement stat=con.createStatement();
            ResultSet r=stat.executeQuery("SELECT * FROM location");
                    while(r.next())
                    {
                        if(x>=(Integer.parseInt(r.getString("x"))-100)&&x<=(Integer.parseInt(r.getString("x"))+100))
                        {
                            if(y>=(Integer.parseInt(r.getString("y"))-100)&&y<=(Integer.parseInt(r.getString("y"))+100))
                            {
                                checkname.setText(r.getString("name"));
                                counter=1;
                            }
                        }
                    }
        }catch(Exception e)
        {
            System.out.println(e);
        }
        if(counter==0)
        {
            checkname.setText(x+":"+y);
        }
    }

    /**
    * @param args the command line arguments
    */
    public void setcheckpoint()
    {
        try
        {
            input=new File("images/check.png");
            image=ImageIO.read(input);
            input1=new File("images/cab.png");
            image1=ImageIO.read(input1);
            this.paint(this.getGraphics());
        }catch(Exception e)
        {
            System.out.println(e);
        }
    }
    public void paint(Graphics g)
    {
        int tempx=0;
        int tempy=0;
        int tendx=0;
        int tendy=0;
        super.paint(g);
         try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/cabservice", "root", "");
            Statement stat=con.createStatement();
            ResultSet r=stat.executeQuery("SELECT * FROM location");
            while(r.next())
            {
                tempx=Integer.parseInt(r.getString("x"));
                tempy=Integer.parseInt(r.getString("y"));
                g.drawImage(image, tempx, tempy, this);
            }
            stat=con.createStatement();
            r=stat.executeQuery("SELECT * FROM road");
            while(r.next())
            {
                tempx=Integer.parseInt(r.getString("source").substring(0,r.getString("source").indexOf(",")));
                tempy=Integer.parseInt(r.getString("source").substring(r.getString("source").indexOf(",")+1));
                tendx=Integer.parseInt(r.getString("destination").substring(0,r.getString("destination").indexOf(",")));
                tendy=Integer.parseInt(r.getString("destination").substring(r.getString("destination").indexOf(",")+1));
                g.drawLine(tempx, tempy, tendx, tendy);
            }
            r=stat.executeQuery("SELECT * FROM cab_details");
            while(r.next())
            {
                tempx=Integer.parseInt(r.getString("current").substring(0,r.getString("current").indexOf(",")));
                tempy=Integer.parseInt(r.getString("current").substring(r.getString("current").indexOf(",")+1));
                if(tempx!=0&&tempy!=0)
                {
                g.drawImage(image1, tempx, tempy, this);
                }
            }
        }catch(Exception e)
        {
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel checkname;
    private javax.swing.JButton clear;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JPanel map;
    private javax.swing.JRadioButton rcab;
    private javax.swing.JRadioButton rcheckpoint;
    private javax.swing.JRadioButton rroad;

    @Override
    public void run() {
        this.paint(this.getGraphics());
        this.setVisible(true);

    }
    // End of variables declaration

}
